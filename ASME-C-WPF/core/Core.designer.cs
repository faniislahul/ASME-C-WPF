#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASME_C_WPF.core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class CoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertabc_log(abc_log instance);
    partial void Updateabc_log(abc_log instance);
    partial void Deleteabc_log(abc_log instance);
    partial void InsertUtang(Utang instance);
    partial void UpdateUtang(Utang instance);
    partial void DeleteUtang(Utang instance);
    partial void InsertBahan_baku(Bahan_baku instance);
    partial void UpdateBahan_baku(Bahan_baku instance);
    partial void DeleteBahan_baku(Bahan_baku instance);
    partial void Insertbb_stock(bb_stock instance);
    partial void Updatebb_stock(bb_stock instance);
    partial void Deletebb_stock(bb_stock instance);
    partial void InsertBeban(Beban instance);
    partial void UpdateBeban(Beban instance);
    partial void DeleteBeban(Beban instance);
    partial void Insertcost_driver(cost_driver instance);
    partial void Updatecost_driver(cost_driver instance);
    partial void Deletecost_driver(cost_driver instance);
    partial void InsertKaryawan(Karyawan instance);
    partial void UpdateKaryawan(Karyawan instance);
    partial void DeleteKaryawan(Karyawan instance);
    partial void Insertmaster_user(master_user instance);
    partial void Updatemaster_user(master_user instance);
    partial void Deletemaster_user(master_user instance);
    partial void Insertmaster_user_log(master_user_log instance);
    partial void Updatemaster_user_log(master_user_log instance);
    partial void Deletemaster_user_log(master_user_log instance);
    partial void InsertModal(Modal instance);
    partial void UpdateModal(Modal instance);
    partial void DeleteModal(Modal instance);
    partial void Insertp_bb(p_bb instance);
    partial void Updatep_bb(p_bb instance);
    partial void Deletep_bb(p_bb instance);
    partial void InsertPeralatan(Peralatan instance);
    partial void UpdatePeralatan(Peralatan instance);
    partial void DeletePeralatan(Peralatan instance);
    partial void InsertPerlengkapan(Perlengkapan instance);
    partial void UpdatePerlengkapan(Perlengkapan instance);
    partial void DeletePerlengkapan(Perlengkapan instance);
    partial void InsertPiutang(Piutang instance);
    partial void UpdatePiutang(Piutang instance);
    partial void DeletePiutang(Piutang instance);
    partial void Insertpos_log(pos_log instance);
    partial void Updatepos_log(pos_log instance);
    partial void Deletepos_log(pos_log instance);
    partial void Insertpos_reservation(pos_reservation instance);
    partial void Updatepos_reservation(pos_reservation instance);
    partial void Deletepos_reservation(pos_reservation instance);
    partial void Insertpos_table(pos_table instance);
    partial void Updatepos_table(pos_table instance);
    partial void Deletepos_table(pos_table instance);
    partial void InsertProduk(Produk instance);
    partial void UpdateProduk(Produk instance);
    partial void DeleteProduk(Produk instance);
    partial void InsertSatuan_bb(Satuan_bb instance);
    partial void UpdateSatuan_bb(Satuan_bb instance);
    partial void DeleteSatuan_bb(Satuan_bb instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void Insertpos_order(pos_order instance);
    partial void Updatepos_order(pos_order instance);
    partial void Deletepos_order(pos_order instance);
    partial void Insertpos_order_list(pos_order_list instance);
    partial void Updatepos_order_list(pos_order_list instance);
    partial void Deletepos_order_list(pos_order_list instance);
    partial void Insertbb_log(bb_log instance);
    partial void Updatebb_log(bb_log instance);
    partial void Deletebb_log(bb_log instance);
    #endregion
		
		public CoreDataContext() : 
				base(global::ASME_C_WPF.Properties.Settings.Default.DataSourceConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<abc_log> abc_logs
		{
			get
			{
				return this.GetTable<abc_log>();
			}
		}
		
		public System.Data.Linq.Table<Utang> Utangs
		{
			get
			{
				return this.GetTable<Utang>();
			}
		}
		
		public System.Data.Linq.Table<Bahan_baku> Bahan_bakus
		{
			get
			{
				return this.GetTable<Bahan_baku>();
			}
		}
		
		public System.Data.Linq.Table<bb_stock> bb_stocks
		{
			get
			{
				return this.GetTable<bb_stock>();
			}
		}
		
		public System.Data.Linq.Table<Beban> Bebans
		{
			get
			{
				return this.GetTable<Beban>();
			}
		}
		
		public System.Data.Linq.Table<cost_driver> cost_drivers
		{
			get
			{
				return this.GetTable<cost_driver>();
			}
		}
		
		public System.Data.Linq.Table<Karyawan> Karyawans
		{
			get
			{
				return this.GetTable<Karyawan>();
			}
		}
		
		public System.Data.Linq.Table<master_user> master_users
		{
			get
			{
				return this.GetTable<master_user>();
			}
		}
		
		public System.Data.Linq.Table<master_user_log> master_user_logs
		{
			get
			{
				return this.GetTable<master_user_log>();
			}
		}
		
		public System.Data.Linq.Table<Modal> Modals
		{
			get
			{
				return this.GetTable<Modal>();
			}
		}
		
		public System.Data.Linq.Table<p_bb> p_bbs
		{
			get
			{
				return this.GetTable<p_bb>();
			}
		}
		
		public System.Data.Linq.Table<Peralatan> Peralatans
		{
			get
			{
				return this.GetTable<Peralatan>();
			}
		}
		
		public System.Data.Linq.Table<Perlengkapan> Perlengkapans
		{
			get
			{
				return this.GetTable<Perlengkapan>();
			}
		}
		
		public System.Data.Linq.Table<Piutang> Piutangs
		{
			get
			{
				return this.GetTable<Piutang>();
			}
		}
		
		public System.Data.Linq.Table<pos_log> pos_logs
		{
			get
			{
				return this.GetTable<pos_log>();
			}
		}
		
		public System.Data.Linq.Table<pos_reservation> pos_reservations
		{
			get
			{
				return this.GetTable<pos_reservation>();
			}
		}
		
		public System.Data.Linq.Table<pos_table> pos_tables
		{
			get
			{
				return this.GetTable<pos_table>();
			}
		}
		
		public System.Data.Linq.Table<Produk> Produks
		{
			get
			{
				return this.GetTable<Produk>();
			}
		}
		
		public System.Data.Linq.Table<Satuan_bb> Satuan_bbs
		{
			get
			{
				return this.GetTable<Satuan_bb>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<pos_order> pos_orders
		{
			get
			{
				return this.GetTable<pos_order>();
			}
		}
		
		public System.Data.Linq.Table<pos_order_list> pos_order_lists
		{
			get
			{
				return this.GetTable<pos_order_list>();
			}
		}
		
		public System.Data.Linq.Table<bb_log> bb_logs
		{
			get
			{
				return this.GetTable<bb_log>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.abc_log")]
	public partial class abc_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _month;
		
		private int _year;
		
		private int _produk;
		
		private double _cost;
		
		private int _costdriver;
		
		private int _unit_produksi;
		
		private EntityRef<cost_driver> _cost_driver;
		
		private EntityRef<Produk> _Produk1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnmonthChanging(string value);
    partial void OnmonthChanged();
    partial void OnyearChanging(int value);
    partial void OnyearChanged();
    partial void OnprodukChanging(int value);
    partial void OnprodukChanged();
    partial void OncostChanging(double value);
    partial void OncostChanged();
    partial void OncostdriverChanging(int value);
    partial void OncostdriverChanged();
    partial void Onunit_produksiChanging(int value);
    partial void Onunit_produksiChanged();
    #endregion
		
		public abc_log()
		{
			this._cost_driver = default(EntityRef<cost_driver>);
			this._Produk1 = default(EntityRef<Produk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int NOT NULL")]
		public int year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_produk", DbType="Int NOT NULL")]
		public int produk
		{
			get
			{
				return this._produk;
			}
			set
			{
				if ((this._produk != value))
				{
					if (this._Produk1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprodukChanging(value);
					this.SendPropertyChanging();
					this._produk = value;
					this.SendPropertyChanged("produk");
					this.OnprodukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Float NOT NULL")]
		public double cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costdriver", DbType="Int NOT NULL")]
		public int costdriver
		{
			get
			{
				return this._costdriver;
			}
			set
			{
				if ((this._costdriver != value))
				{
					if (this._cost_driver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncostdriverChanging(value);
					this.SendPropertyChanging();
					this._costdriver = value;
					this.SendPropertyChanged("costdriver");
					this.OncostdriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit_produksi", DbType="Int NOT NULL")]
		public int unit_produksi
		{
			get
			{
				return this._unit_produksi;
			}
			set
			{
				if ((this._unit_produksi != value))
				{
					this.Onunit_produksiChanging(value);
					this.SendPropertyChanging();
					this._unit_produksi = value;
					this.SendPropertyChanged("unit_produksi");
					this.Onunit_produksiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cost_driver_abc_log", Storage="_cost_driver", ThisKey="costdriver", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public cost_driver cost_driver
		{
			get
			{
				return this._cost_driver.Entity;
			}
			set
			{
				cost_driver previousValue = this._cost_driver.Entity;
				if (((previousValue != value) 
							|| (this._cost_driver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cost_driver.Entity = null;
						previousValue.abc_logs.Remove(this);
					}
					this._cost_driver.Entity = value;
					if ((value != null))
					{
						value.abc_logs.Add(this);
						this._costdriver = value.Id;
					}
					else
					{
						this._costdriver = default(int);
					}
					this.SendPropertyChanged("cost_driver");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produk_abc_log", Storage="_Produk1", ThisKey="produk", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Produk Produk1
		{
			get
			{
				return this._Produk1.Entity;
			}
			set
			{
				Produk previousValue = this._Produk1.Entity;
				if (((previousValue != value) 
							|| (this._Produk1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produk1.Entity = null;
						previousValue.abc_logs.Remove(this);
					}
					this._Produk1.Entity = value;
					if ((value != null))
					{
						value.abc_logs.Add(this);
						this._produk = value.Id;
					}
					else
					{
						this._produk = default(int);
					}
					this.SendPropertyChanged("Produk1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utang")]
	public partial class Utang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _detail;
		
		private long _jumlah;
		
		private long _terbayar;
		
		private System.DateTime _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndetailChanging(string value);
    partial void OndetailChanged();
    partial void OnjumlahChanging(long value);
    partial void OnjumlahChanged();
    partial void OnterbayarChanging(long value);
    partial void OnterbayarChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public Utang()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this.OndetailChanging(value);
					this.SendPropertyChanging();
					this._detail = value;
					this.SendPropertyChanged("detail");
					this.OndetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jumlah", DbType="BigInt NOT NULL")]
		public long jumlah
		{
			get
			{
				return this._jumlah;
			}
			set
			{
				if ((this._jumlah != value))
				{
					this.OnjumlahChanging(value);
					this.SendPropertyChanging();
					this._jumlah = value;
					this.SendPropertyChanged("jumlah");
					this.OnjumlahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terbayar", DbType="BigInt NOT NULL")]
		public long terbayar
		{
			get
			{
				return this._terbayar;
			}
			set
			{
				if ((this._terbayar != value))
				{
					this.OnterbayarChanging(value);
					this.SendPropertyChanging();
					this._terbayar = value;
					this.SendPropertyChanged("terbayar");
					this.OnterbayarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bahan_baku")]
	public partial class Bahan_baku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nama;
		
		private long _harga_beli;
		
		private long _hpp_digunakan;
		
		private int _satuan;
		
		private int _quantity;
		
		private int _used;
		
		private EntitySet<bb_stock> _bb_stocks;
		
		private EntitySet<p_bb> _p_bbs;
		
		private EntitySet<bb_log> _bb_logs;
		
		private EntityRef<Satuan_bb> _Satuan_bb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    partial void Onharga_beliChanging(long value);
    partial void Onharga_beliChanged();
    partial void Onhpp_digunakanChanging(long value);
    partial void Onhpp_digunakanChanged();
    partial void OnsatuanChanging(int value);
    partial void OnsatuanChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnusedChanging(int value);
    partial void OnusedChanged();
    #endregion
		
		public Bahan_baku()
		{
			this._bb_stocks = new EntitySet<bb_stock>(new Action<bb_stock>(this.attach_bb_stocks), new Action<bb_stock>(this.detach_bb_stocks));
			this._p_bbs = new EntitySet<p_bb>(new Action<p_bb>(this.attach_p_bbs), new Action<p_bb>(this.detach_p_bbs));
			this._bb_logs = new EntitySet<bb_log>(new Action<bb_log>(this.attach_bb_logs), new Action<bb_log>(this.detach_bb_logs));
			this._Satuan_bb = default(EntityRef<Satuan_bb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_harga_beli", DbType="BigInt NOT NULL")]
		public long harga_beli
		{
			get
			{
				return this._harga_beli;
			}
			set
			{
				if ((this._harga_beli != value))
				{
					this.Onharga_beliChanging(value);
					this.SendPropertyChanging();
					this._harga_beli = value;
					this.SendPropertyChanged("harga_beli");
					this.Onharga_beliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hpp_digunakan", DbType="BigInt NOT NULL")]
		public long hpp_digunakan
		{
			get
			{
				return this._hpp_digunakan;
			}
			set
			{
				if ((this._hpp_digunakan != value))
				{
					this.Onhpp_digunakanChanging(value);
					this.SendPropertyChanging();
					this._hpp_digunakan = value;
					this.SendPropertyChanged("hpp_digunakan");
					this.Onhpp_digunakanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_satuan", DbType="Int NOT NULL")]
		public int satuan
		{
			get
			{
				return this._satuan;
			}
			set
			{
				if ((this._satuan != value))
				{
					if (this._Satuan_bb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsatuanChanging(value);
					this.SendPropertyChanging();
					this._satuan = value;
					this.SendPropertyChanged("satuan");
					this.OnsatuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_used", DbType="Int NOT NULL")]
		public int used
		{
			get
			{
				return this._used;
			}
			set
			{
				if ((this._used != value))
				{
					this.OnusedChanging(value);
					this.SendPropertyChanging();
					this._used = value;
					this.SendPropertyChanged("used");
					this.OnusedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bahan_baku_bb_stock", Storage="_bb_stocks", ThisKey="Id", OtherKey="tipe")]
		public EntitySet<bb_stock> bb_stocks
		{
			get
			{
				return this._bb_stocks;
			}
			set
			{
				this._bb_stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bahan_baku_p_bb", Storage="_p_bbs", ThisKey="Id", OtherKey="bb")]
		public EntitySet<p_bb> p_bbs
		{
			get
			{
				return this._p_bbs;
			}
			set
			{
				this._p_bbs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bahan_baku_bb_log", Storage="_bb_logs", ThisKey="Id", OtherKey="tipe")]
		public EntitySet<bb_log> bb_logs
		{
			get
			{
				return this._bb_logs;
			}
			set
			{
				this._bb_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Satuan_bb_Bahan_baku", Storage="_Satuan_bb", ThisKey="satuan", OtherKey="Id", IsForeignKey=true)]
		public Satuan_bb Satuan_bb
		{
			get
			{
				return this._Satuan_bb.Entity;
			}
			set
			{
				Satuan_bb previousValue = this._Satuan_bb.Entity;
				if (((previousValue != value) 
							|| (this._Satuan_bb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Satuan_bb.Entity = null;
						previousValue.Bahan_bakus.Remove(this);
					}
					this._Satuan_bb.Entity = value;
					if ((value != null))
					{
						value.Bahan_bakus.Add(this);
						this._satuan = value.Id;
					}
					else
					{
						this._satuan = default(int);
					}
					this.SendPropertyChanged("Satuan_bb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bb_stocks(bb_stock entity)
		{
			this.SendPropertyChanging();
			entity.Bahan_baku = this;
		}
		
		private void detach_bb_stocks(bb_stock entity)
		{
			this.SendPropertyChanging();
			entity.Bahan_baku = null;
		}
		
		private void attach_p_bbs(p_bb entity)
		{
			this.SendPropertyChanging();
			entity.Bahan_baku = this;
		}
		
		private void detach_p_bbs(p_bb entity)
		{
			this.SendPropertyChanging();
			entity.Bahan_baku = null;
		}
		
		private void attach_bb_logs(bb_log entity)
		{
			this.SendPropertyChanging();
			entity.Bahan_baku = this;
		}
		
		private void detach_bb_logs(bb_log entity)
		{
			this.SendPropertyChanging();
			entity.Bahan_baku = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bb_stock")]
	public partial class bb_stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _tipe;
		
		private long _harga_beli;
		
		private long _hpp_digunakan;
		
		private int _satuan;
		
		private int _quantity;
		
		private int _used;
		
		private EntityRef<Bahan_baku> _Bahan_baku;
		
		private EntityRef<Satuan_bb> _Satuan_bb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OntipeChanging(int value);
    partial void OntipeChanged();
    partial void Onharga_beliChanging(long value);
    partial void Onharga_beliChanged();
    partial void Onhpp_digunakanChanging(long value);
    partial void Onhpp_digunakanChanged();
    partial void OnsatuanChanging(int value);
    partial void OnsatuanChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnusedChanging(int value);
    partial void OnusedChanged();
    #endregion
		
		public bb_stock()
		{
			this._Bahan_baku = default(EntityRef<Bahan_baku>);
			this._Satuan_bb = default(EntityRef<Satuan_bb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipe", DbType="Int NOT NULL")]
		public int tipe
		{
			get
			{
				return this._tipe;
			}
			set
			{
				if ((this._tipe != value))
				{
					if (this._Bahan_baku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntipeChanging(value);
					this.SendPropertyChanging();
					this._tipe = value;
					this.SendPropertyChanged("tipe");
					this.OntipeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_harga_beli", DbType="BigInt NOT NULL")]
		public long harga_beli
		{
			get
			{
				return this._harga_beli;
			}
			set
			{
				if ((this._harga_beli != value))
				{
					this.Onharga_beliChanging(value);
					this.SendPropertyChanging();
					this._harga_beli = value;
					this.SendPropertyChanged("harga_beli");
					this.Onharga_beliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hpp_digunakan", DbType="BigInt NOT NULL")]
		public long hpp_digunakan
		{
			get
			{
				return this._hpp_digunakan;
			}
			set
			{
				if ((this._hpp_digunakan != value))
				{
					this.Onhpp_digunakanChanging(value);
					this.SendPropertyChanging();
					this._hpp_digunakan = value;
					this.SendPropertyChanged("hpp_digunakan");
					this.Onhpp_digunakanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_satuan", DbType="Int NOT NULL")]
		public int satuan
		{
			get
			{
				return this._satuan;
			}
			set
			{
				if ((this._satuan != value))
				{
					if (this._Satuan_bb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsatuanChanging(value);
					this.SendPropertyChanging();
					this._satuan = value;
					this.SendPropertyChanged("satuan");
					this.OnsatuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_used", DbType="Int NOT NULL")]
		public int used
		{
			get
			{
				return this._used;
			}
			set
			{
				if ((this._used != value))
				{
					this.OnusedChanging(value);
					this.SendPropertyChanging();
					this._used = value;
					this.SendPropertyChanged("used");
					this.OnusedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bahan_baku_bb_stock", Storage="_Bahan_baku", ThisKey="tipe", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bahan_baku Bahan_baku
		{
			get
			{
				return this._Bahan_baku.Entity;
			}
			set
			{
				Bahan_baku previousValue = this._Bahan_baku.Entity;
				if (((previousValue != value) 
							|| (this._Bahan_baku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bahan_baku.Entity = null;
						previousValue.bb_stocks.Remove(this);
					}
					this._Bahan_baku.Entity = value;
					if ((value != null))
					{
						value.bb_stocks.Add(this);
						this._tipe = value.Id;
					}
					else
					{
						this._tipe = default(int);
					}
					this.SendPropertyChanged("Bahan_baku");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Satuan_bb_bb_stock", Storage="_Satuan_bb", ThisKey="satuan", OtherKey="Id", IsForeignKey=true)]
		public Satuan_bb Satuan_bb
		{
			get
			{
				return this._Satuan_bb.Entity;
			}
			set
			{
				Satuan_bb previousValue = this._Satuan_bb.Entity;
				if (((previousValue != value) 
							|| (this._Satuan_bb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Satuan_bb.Entity = null;
						previousValue.bb_stocks.Remove(this);
					}
					this._Satuan_bb.Entity = value;
					if ((value != null))
					{
						value.bb_stocks.Add(this);
						this._satuan = value.Id;
					}
					else
					{
						this._satuan = default(int);
					}
					this.SendPropertyChanged("Satuan_bb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Beban")]
	public partial class Beban : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nama;
		
		private long _jumlah;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    partial void OnjumlahChanging(long value);
    partial void OnjumlahChanged();
    #endregion
		
		public Beban()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jumlah", DbType="BigInt NOT NULL")]
		public long jumlah
		{
			get
			{
				return this._jumlah;
			}
			set
			{
				if ((this._jumlah != value))
				{
					this.OnjumlahChanging(value);
					this.SendPropertyChanging();
					this._jumlah = value;
					this.SendPropertyChanged("jumlah");
					this.OnjumlahChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cost_driver")]
	public partial class cost_driver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nama;
		
		private EntitySet<abc_log> _abc_logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    #endregion
		
		public cost_driver()
		{
			this._abc_logs = new EntitySet<abc_log>(new Action<abc_log>(this.attach_abc_logs), new Action<abc_log>(this.detach_abc_logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cost_driver_abc_log", Storage="_abc_logs", ThisKey="Id", OtherKey="costdriver")]
		public EntitySet<abc_log> abc_logs
		{
			get
			{
				return this._abc_logs;
			}
			set
			{
				this._abc_logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_abc_logs(abc_log entity)
		{
			this.SendPropertyChanging();
			entity.cost_driver = this;
		}
		
		private void detach_abc_logs(abc_log entity)
		{
			this.SendPropertyChanging();
			entity.cost_driver = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Karyawan")]
	public partial class Karyawan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nama;
		
		private long _gaji_pokok;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    partial void Ongaji_pokokChanging(long value);
    partial void Ongaji_pokokChanged();
    #endregion
		
		public Karyawan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gaji_pokok", DbType="BigInt NOT NULL")]
		public long gaji_pokok
		{
			get
			{
				return this._gaji_pokok;
			}
			set
			{
				if ((this._gaji_pokok != value))
				{
					this.Ongaji_pokokChanging(value);
					this.SendPropertyChanging();
					this._gaji_pokok = value;
					this.SendPropertyChanged("gaji_pokok");
					this.Ongaji_pokokChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.master_user")]
	public partial class master_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _pass;
		
		private int _role;
		
		private System.Nullable<System.DateTime> _last_login;
		
		private EntitySet<master_user_log> _master_user_logs;
		
		private EntitySet<pos_log> _pos_logs;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntitySet<pos_order> _pos_orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void OnroleChanging(int value);
    partial void OnroleChanged();
    partial void Onlast_loginChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_loginChanged();
    #endregion
		
		public master_user()
		{
			this._master_user_logs = new EntitySet<master_user_log>(new Action<master_user_log>(this.attach_master_user_logs), new Action<master_user_log>(this.detach_master_user_logs));
			this._pos_logs = new EntitySet<pos_log>(new Action<pos_log>(this.attach_pos_logs), new Action<pos_log>(this.detach_pos_logs));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._pos_orders = new EntitySet<pos_order>(new Action<pos_order>(this.attach_pos_orders), new Action<pos_order>(this.detach_pos_orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="Int NOT NULL")]
		public int role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_login", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_login
		{
			get
			{
				return this._last_login;
			}
			set
			{
				if ((this._last_login != value))
				{
					this.Onlast_loginChanging(value);
					this.SendPropertyChanging();
					this._last_login = value;
					this.SendPropertyChanged("last_login");
					this.Onlast_loginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="master_user_master_user_log", Storage="_master_user_logs", ThisKey="Id", OtherKey="user")]
		public EntitySet<master_user_log> master_user_logs
		{
			get
			{
				return this._master_user_logs;
			}
			set
			{
				this._master_user_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="master_user_pos_log", Storage="_pos_logs", ThisKey="Id", OtherKey="user_id")]
		public EntitySet<pos_log> pos_logs
		{
			get
			{
				return this._pos_logs;
			}
			set
			{
				this._pos_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="master_user_Transaction", Storage="_Transactions", ThisKey="Id", OtherKey="user")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="master_user_pos_order", Storage="_pos_orders", ThisKey="Id", OtherKey="user")]
		public EntitySet<pos_order> pos_orders
		{
			get
			{
				return this._pos_orders;
			}
			set
			{
				this._pos_orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_master_user_logs(master_user_log entity)
		{
			this.SendPropertyChanging();
			entity.master_user = this;
		}
		
		private void detach_master_user_logs(master_user_log entity)
		{
			this.SendPropertyChanging();
			entity.master_user = null;
		}
		
		private void attach_pos_logs(pos_log entity)
		{
			this.SendPropertyChanging();
			entity.master_user = this;
		}
		
		private void detach_pos_logs(pos_log entity)
		{
			this.SendPropertyChanging();
			entity.master_user = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.master_user = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.master_user = null;
		}
		
		private void attach_pos_orders(pos_order entity)
		{
			this.SendPropertyChanging();
			entity.master_user = this;
		}
		
		private void detach_pos_orders(pos_order entity)
		{
			this.SendPropertyChanging();
			entity.master_user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.master_user_log")]
	public partial class master_user_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _user;
		
		private int _activity;
		
		private System.DateTime _date;
		
		private EntityRef<master_user> _master_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnuserChanging(int value);
    partial void OnuserChanged();
    partial void OnactivityChanging(int value);
    partial void OnactivityChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public master_user_log()
		{
			this._master_user = default(EntityRef<master_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="Int NOT NULL")]
		public int user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this.OnuserChanging(value);
					this.SendPropertyChanging();
					this._user = value;
					this.SendPropertyChanged("user");
					this.OnuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity", DbType="Int NOT NULL")]
		public int activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					this.OnactivityChanging(value);
					this.SendPropertyChanging();
					this._activity = value;
					this.SendPropertyChanged("activity");
					this.OnactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="master_user_master_user_log", Storage="_master_user", ThisKey="user", OtherKey="Id", IsForeignKey=true)]
		public master_user master_user
		{
			get
			{
				return this._master_user.Entity;
			}
			set
			{
				master_user previousValue = this._master_user.Entity;
				if (((previousValue != value) 
							|| (this._master_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._master_user.Entity = null;
						previousValue.master_user_logs.Remove(this);
					}
					this._master_user.Entity = value;
					if ((value != null))
					{
						value.master_user_logs.Add(this);
						this._user = value.Id;
					}
					else
					{
						this._user = default(int);
					}
					this.SendPropertyChanged("master_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modal")]
	public partial class Modal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _detail;
		
		private long _jumlah;
		
		private long _sisa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndetailChanging(string value);
    partial void OndetailChanged();
    partial void OnjumlahChanging(long value);
    partial void OnjumlahChanged();
    partial void OnsisaChanging(long value);
    partial void OnsisaChanged();
    #endregion
		
		public Modal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this.OndetailChanging(value);
					this.SendPropertyChanging();
					this._detail = value;
					this.SendPropertyChanged("detail");
					this.OndetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jumlah", DbType="BigInt NOT NULL")]
		public long jumlah
		{
			get
			{
				return this._jumlah;
			}
			set
			{
				if ((this._jumlah != value))
				{
					this.OnjumlahChanging(value);
					this.SendPropertyChanging();
					this._jumlah = value;
					this.SendPropertyChanged("jumlah");
					this.OnjumlahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sisa", DbType="BigInt NOT NULL")]
		public long sisa
		{
			get
			{
				return this._sisa;
			}
			set
			{
				if ((this._sisa != value))
				{
					this.OnsisaChanging(value);
					this.SendPropertyChanging();
					this._sisa = value;
					this.SendPropertyChanged("sisa");
					this.OnsisaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.p_bb")]
	public partial class p_bb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _produk;
		
		private int _bb;
		
		private EntityRef<Bahan_baku> _Bahan_baku;
		
		private EntityRef<Produk> _Produk1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnprodukChanging(int value);
    partial void OnprodukChanged();
    partial void OnbbChanging(int value);
    partial void OnbbChanged();
    #endregion
		
		public p_bb()
		{
			this._Bahan_baku = default(EntityRef<Bahan_baku>);
			this._Produk1 = default(EntityRef<Produk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_produk", DbType="Int NOT NULL")]
		public int produk
		{
			get
			{
				return this._produk;
			}
			set
			{
				if ((this._produk != value))
				{
					if (this._Produk1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprodukChanging(value);
					this.SendPropertyChanging();
					this._produk = value;
					this.SendPropertyChanged("produk");
					this.OnprodukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bb", DbType="Int NOT NULL")]
		public int bb
		{
			get
			{
				return this._bb;
			}
			set
			{
				if ((this._bb != value))
				{
					if (this._Bahan_baku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbbChanging(value);
					this.SendPropertyChanging();
					this._bb = value;
					this.SendPropertyChanged("bb");
					this.OnbbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bahan_baku_p_bb", Storage="_Bahan_baku", ThisKey="bb", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Bahan_baku Bahan_baku
		{
			get
			{
				return this._Bahan_baku.Entity;
			}
			set
			{
				Bahan_baku previousValue = this._Bahan_baku.Entity;
				if (((previousValue != value) 
							|| (this._Bahan_baku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bahan_baku.Entity = null;
						previousValue.p_bbs.Remove(this);
					}
					this._Bahan_baku.Entity = value;
					if ((value != null))
					{
						value.p_bbs.Add(this);
						this._bb = value.Id;
					}
					else
					{
						this._bb = default(int);
					}
					this.SendPropertyChanged("Bahan_baku");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produk_p_bb", Storage="_Produk1", ThisKey="produk", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Produk Produk1
		{
			get
			{
				return this._Produk1.Entity;
			}
			set
			{
				Produk previousValue = this._Produk1.Entity;
				if (((previousValue != value) 
							|| (this._Produk1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produk1.Entity = null;
						previousValue.p_bbs.Remove(this);
					}
					this._Produk1.Entity = value;
					if ((value != null))
					{
						value.p_bbs.Add(this);
						this._produk = value.Id;
					}
					else
					{
						this._produk = default(int);
					}
					this.SendPropertyChanged("Produk1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Peralatan")]
	public partial class Peralatan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nama;
		
		private long _harga;
		
		private int _quantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    partial void OnhargaChanging(long value);
    partial void OnhargaChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public Peralatan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_harga", DbType="BigInt NOT NULL")]
		public long harga
		{
			get
			{
				return this._harga;
			}
			set
			{
				if ((this._harga != value))
				{
					this.OnhargaChanging(value);
					this.SendPropertyChanging();
					this._harga = value;
					this.SendPropertyChanged("harga");
					this.OnhargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Perlengkapan")]
	public partial class Perlengkapan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nama;
		
		private long _harga;
		
		private int _quantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    partial void OnhargaChanging(long value);
    partial void OnhargaChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public Perlengkapan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_harga", DbType="BigInt NOT NULL")]
		public long harga
		{
			get
			{
				return this._harga;
			}
			set
			{
				if ((this._harga != value))
				{
					this.OnhargaChanging(value);
					this.SendPropertyChanging();
					this._harga = value;
					this.SendPropertyChanged("harga");
					this.OnhargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Piutang")]
	public partial class Piutang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _detail;
		
		private long _jumlah;
		
		private long _terbayar;
		
		private System.DateTime _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndetailChanging(string value);
    partial void OndetailChanged();
    partial void OnjumlahChanging(long value);
    partial void OnjumlahChanged();
    partial void OnterbayarChanging(long value);
    partial void OnterbayarChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public Piutang()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this.OndetailChanging(value);
					this.SendPropertyChanging();
					this._detail = value;
					this.SendPropertyChanged("detail");
					this.OndetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jumlah", DbType="BigInt NOT NULL")]
		public long jumlah
		{
			get
			{
				return this._jumlah;
			}
			set
			{
				if ((this._jumlah != value))
				{
					this.OnjumlahChanging(value);
					this.SendPropertyChanging();
					this._jumlah = value;
					this.SendPropertyChanged("jumlah");
					this.OnjumlahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terbayar", DbType="BigInt NOT NULL")]
		public long terbayar
		{
			get
			{
				return this._terbayar;
			}
			set
			{
				if ((this._terbayar != value))
				{
					this.OnterbayarChanging(value);
					this.SendPropertyChanging();
					this._terbayar = value;
					this.SendPropertyChanged("terbayar");
					this.OnterbayarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pos_log")]
	public partial class pos_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _user_id;
		
		private string _action;
		
		private System.DateTime _date;
		
		private EntityRef<master_user> _master_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnactionChanging(string value);
    partial void OnactionChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public pos_log()
		{
			this._master_user = default(EntityRef<master_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._master_user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string action
		{
			get
			{
				return this._action;
			}
			set
			{
				if ((this._action != value))
				{
					this.OnactionChanging(value);
					this.SendPropertyChanging();
					this._action = value;
					this.SendPropertyChanged("action");
					this.OnactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="master_user_pos_log", Storage="_master_user", ThisKey="user_id", OtherKey="Id", IsForeignKey=true)]
		public master_user master_user
		{
			get
			{
				return this._master_user.Entity;
			}
			set
			{
				master_user previousValue = this._master_user.Entity;
				if (((previousValue != value) 
							|| (this._master_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._master_user.Entity = null;
						previousValue.pos_logs.Remove(this);
					}
					this._master_user.Entity = value;
					if ((value != null))
					{
						value.pos_logs.Add(this);
						this._user_id = value.Id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("master_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pos_reservation")]
	public partial class pos_reservation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _details;
		
		private int _table_id;
		
		private System.DateTime _date;
		
		private EntityRef<pos_table> _pos_table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Ontable_idChanging(int value);
    partial void Ontable_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public pos_reservation()
		{
			this._pos_table = default(EntityRef<pos_table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_table_id", DbType="Int NOT NULL")]
		public int table_id
		{
			get
			{
				return this._table_id;
			}
			set
			{
				if ((this._table_id != value))
				{
					if (this._pos_table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontable_idChanging(value);
					this.SendPropertyChanging();
					this._table_id = value;
					this.SendPropertyChanged("table_id");
					this.Ontable_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pos_table_pos_reservation", Storage="_pos_table", ThisKey="table_id", OtherKey="Id", IsForeignKey=true)]
		public pos_table pos_table
		{
			get
			{
				return this._pos_table.Entity;
			}
			set
			{
				pos_table previousValue = this._pos_table.Entity;
				if (((previousValue != value) 
							|| (this._pos_table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pos_table.Entity = null;
						previousValue.pos_reservations.Remove(this);
					}
					this._pos_table.Entity = value;
					if ((value != null))
					{
						value.pos_reservations.Add(this);
						this._table_id = value.Id;
					}
					else
					{
						this._table_id = default(int);
					}
					this.SendPropertyChanged("pos_table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pos_table")]
	public partial class pos_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private bool _is_empty;
		
		private EntitySet<pos_reservation> _pos_reservations;
		
		private EntitySet<pos_order> _pos_orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onis_emptyChanging(bool value);
    partial void Onis_emptyChanged();
    #endregion
		
		public pos_table()
		{
			this._pos_reservations = new EntitySet<pos_reservation>(new Action<pos_reservation>(this.attach_pos_reservations), new Action<pos_reservation>(this.detach_pos_reservations));
			this._pos_orders = new EntitySet<pos_order>(new Action<pos_order>(this.attach_pos_orders), new Action<pos_order>(this.detach_pos_orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_empty", DbType="Bit NOT NULL")]
		public bool is_empty
		{
			get
			{
				return this._is_empty;
			}
			set
			{
				if ((this._is_empty != value))
				{
					this.Onis_emptyChanging(value);
					this.SendPropertyChanging();
					this._is_empty = value;
					this.SendPropertyChanged("is_empty");
					this.Onis_emptyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pos_table_pos_reservation", Storage="_pos_reservations", ThisKey="Id", OtherKey="table_id")]
		public EntitySet<pos_reservation> pos_reservations
		{
			get
			{
				return this._pos_reservations;
			}
			set
			{
				this._pos_reservations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pos_table_pos_order", Storage="_pos_orders", ThisKey="Id", OtherKey="table_id")]
		public EntitySet<pos_order> pos_orders
		{
			get
			{
				return this._pos_orders;
			}
			set
			{
				this._pos_orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pos_reservations(pos_reservation entity)
		{
			this.SendPropertyChanging();
			entity.pos_table = this;
		}
		
		private void detach_pos_reservations(pos_reservation entity)
		{
			this.SendPropertyChanging();
			entity.pos_table = null;
		}
		
		private void attach_pos_orders(pos_order entity)
		{
			this.SendPropertyChanging();
			entity.pos_table = this;
		}
		
		private void detach_pos_orders(pos_order entity)
		{
			this.SendPropertyChanging();
			entity.pos_table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produk")]
	public partial class Produk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nama;
		
		private string _SKU;
		
		private long _harga_jual;
		
		private bool _active;
		
		private EntitySet<abc_log> _abc_logs;
		
		private EntitySet<p_bb> _p_bbs;
		
		private EntitySet<pos_order_list> _pos_order_lists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void Onharga_jualChanging(long value);
    partial void Onharga_jualChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public Produk()
		{
			this._abc_logs = new EntitySet<abc_log>(new Action<abc_log>(this.attach_abc_logs), new Action<abc_log>(this.detach_abc_logs));
			this._p_bbs = new EntitySet<p_bb>(new Action<p_bb>(this.attach_p_bbs), new Action<p_bb>(this.detach_p_bbs));
			this._pos_order_lists = new EntitySet<pos_order_list>(new Action<pos_order_list>(this.attach_pos_order_lists), new Action<pos_order_list>(this.detach_pos_order_lists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_harga_jual", DbType="BigInt NOT NULL")]
		public long harga_jual
		{
			get
			{
				return this._harga_jual;
			}
			set
			{
				if ((this._harga_jual != value))
				{
					this.Onharga_jualChanging(value);
					this.SendPropertyChanging();
					this._harga_jual = value;
					this.SendPropertyChanged("harga_jual");
					this.Onharga_jualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produk_abc_log", Storage="_abc_logs", ThisKey="Id", OtherKey="produk")]
		public EntitySet<abc_log> abc_logs
		{
			get
			{
				return this._abc_logs;
			}
			set
			{
				this._abc_logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produk_p_bb", Storage="_p_bbs", ThisKey="Id", OtherKey="produk")]
		public EntitySet<p_bb> p_bbs
		{
			get
			{
				return this._p_bbs;
			}
			set
			{
				this._p_bbs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produk_pos_order_list", Storage="_pos_order_lists", ThisKey="Id", OtherKey="peroduk")]
		public EntitySet<pos_order_list> pos_order_lists
		{
			get
			{
				return this._pos_order_lists;
			}
			set
			{
				this._pos_order_lists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_abc_logs(abc_log entity)
		{
			this.SendPropertyChanging();
			entity.Produk1 = this;
		}
		
		private void detach_abc_logs(abc_log entity)
		{
			this.SendPropertyChanging();
			entity.Produk1 = null;
		}
		
		private void attach_p_bbs(p_bb entity)
		{
			this.SendPropertyChanging();
			entity.Produk1 = this;
		}
		
		private void detach_p_bbs(p_bb entity)
		{
			this.SendPropertyChanging();
			entity.Produk1 = null;
		}
		
		private void attach_pos_order_lists(pos_order_list entity)
		{
			this.SendPropertyChanging();
			entity.Produk = this;
		}
		
		private void detach_pos_order_lists(pos_order_list entity)
		{
			this.SendPropertyChanging();
			entity.Produk = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Satuan_bb")]
	public partial class Satuan_bb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _nama;
		
		private EntitySet<Bahan_baku> _Bahan_bakus;
		
		private EntitySet<bb_stock> _bb_stocks;
		
		private EntitySet<bb_log> _bb_logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    #endregion
		
		public Satuan_bb()
		{
			this._Bahan_bakus = new EntitySet<Bahan_baku>(new Action<Bahan_baku>(this.attach_Bahan_bakus), new Action<Bahan_baku>(this.detach_Bahan_bakus));
			this._bb_stocks = new EntitySet<bb_stock>(new Action<bb_stock>(this.attach_bb_stocks), new Action<bb_stock>(this.detach_bb_stocks));
			this._bb_logs = new EntitySet<bb_log>(new Action<bb_log>(this.attach_bb_logs), new Action<bb_log>(this.detach_bb_logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Satuan_bb_Bahan_baku", Storage="_Bahan_bakus", ThisKey="Id", OtherKey="satuan")]
		public EntitySet<Bahan_baku> Bahan_bakus
		{
			get
			{
				return this._Bahan_bakus;
			}
			set
			{
				this._Bahan_bakus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Satuan_bb_bb_stock", Storage="_bb_stocks", ThisKey="Id", OtherKey="satuan")]
		public EntitySet<bb_stock> bb_stocks
		{
			get
			{
				return this._bb_stocks;
			}
			set
			{
				this._bb_stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Satuan_bb_bb_log", Storage="_bb_logs", ThisKey="Id", OtherKey="satuan")]
		public EntitySet<bb_log> bb_logs
		{
			get
			{
				return this._bb_logs;
			}
			set
			{
				this._bb_logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bahan_bakus(Bahan_baku entity)
		{
			this.SendPropertyChanging();
			entity.Satuan_bb = this;
		}
		
		private void detach_Bahan_bakus(Bahan_baku entity)
		{
			this.SendPropertyChanging();
			entity.Satuan_bb = null;
		}
		
		private void attach_bb_stocks(bb_stock entity)
		{
			this.SendPropertyChanging();
			entity.Satuan_bb = this;
		}
		
		private void detach_bb_stocks(bb_stock entity)
		{
			this.SendPropertyChanging();
			entity.Satuan_bb = null;
		}
		
		private void attach_bb_logs(bb_log entity)
		{
			this.SendPropertyChanging();
			entity.Satuan_bb = this;
		}
		
		private void detach_bb_logs(bb_log entity)
		{
			this.SendPropertyChanging();
			entity.Satuan_bb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Transaction]")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _date;
		
		private string _type;
		
		private int _quantity;
		
		private int _user;
		
		private string _details;
		
		private long _jumlah;
		
		private EntityRef<master_user> _master_user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnuserChanging(int value);
    partial void OnuserChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void OnjumlahChanging(long value);
    partial void OnjumlahChanged();
    #endregion
		
		public Transaction()
		{
			this._master_user = default(EntityRef<master_user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL", IsDbGenerated=true, IsVersion=true)]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="Int NOT NULL")]
		public int user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this.OnuserChanging(value);
					this.SendPropertyChanging();
					this._user = value;
					this.SendPropertyChanged("user");
					this.OnuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(500)")]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jumlah", DbType="BigInt NOT NULL")]
		public long jumlah
		{
			get
			{
				return this._jumlah;
			}
			set
			{
				if ((this._jumlah != value))
				{
					this.OnjumlahChanging(value);
					this.SendPropertyChanging();
					this._jumlah = value;
					this.SendPropertyChanged("jumlah");
					this.OnjumlahChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="master_user_Transaction", Storage="_master_user", ThisKey="user", OtherKey="Id", IsForeignKey=true)]
		public master_user master_user
		{
			get
			{
				return this._master_user.Entity;
			}
			set
			{
				master_user previousValue = this._master_user.Entity;
				if (((previousValue != value) 
							|| (this._master_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._master_user.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._master_user.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._user = value.Id;
					}
					else
					{
						this._user = default(int);
					}
					this.SendPropertyChanged("master_user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pos_order")]
	public partial class pos_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _details;
		
		private int _table_id;
		
		private System.DateTime _date;
		
		private string _status;
		
		private int _discount;
		
		private long _disc_amount;
		
		private int _user;
		
		private long _total;
		
		private long _pembayaran;
		
		private long _service;
		
		private long _ppn;
		
		private EntitySet<pos_order_list> _pos_order_lists;
		
		private EntityRef<master_user> _master_user;
		
		private EntityRef<pos_table> _pos_table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndetailsChanging(string value);
    partial void OndetailsChanged();
    partial void Ontable_idChanging(int value);
    partial void Ontable_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OndiscountChanging(int value);
    partial void OndiscountChanged();
    partial void Ondisc_amountChanging(long value);
    partial void Ondisc_amountChanged();
    partial void OnuserChanging(int value);
    partial void OnuserChanged();
    partial void OntotalChanging(long value);
    partial void OntotalChanged();
    partial void OnpembayaranChanging(long value);
    partial void OnpembayaranChanged();
    partial void OnserviceChanging(long value);
    partial void OnserviceChanged();
    partial void OnppnChanging(long value);
    partial void OnppnChanged();
    #endregion
		
		public pos_order()
		{
			this._pos_order_lists = new EntitySet<pos_order_list>(new Action<pos_order_list>(this.attach_pos_order_lists), new Action<pos_order_list>(this.detach_pos_order_lists));
			this._master_user = default(EntityRef<master_user>);
			this._pos_table = default(EntityRef<pos_table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_details", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string details
		{
			get
			{
				return this._details;
			}
			set
			{
				if ((this._details != value))
				{
					this.OndetailsChanging(value);
					this.SendPropertyChanging();
					this._details = value;
					this.SendPropertyChanged("details");
					this.OndetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_table_id", DbType="Int NOT NULL")]
		public int table_id
		{
			get
			{
				return this._table_id;
			}
			set
			{
				if ((this._table_id != value))
				{
					if (this._pos_table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontable_idChanging(value);
					this.SendPropertyChanging();
					this._table_id = value;
					this.SendPropertyChanged("table_id");
					this.Ontable_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int NOT NULL")]
		public int discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disc_amount", DbType="BigInt NOT NULL")]
		public long disc_amount
		{
			get
			{
				return this._disc_amount;
			}
			set
			{
				if ((this._disc_amount != value))
				{
					this.Ondisc_amountChanging(value);
					this.SendPropertyChanging();
					this._disc_amount = value;
					this.SendPropertyChanged("disc_amount");
					this.Ondisc_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[user]", Storage="_user", DbType="Int NOT NULL")]
		public int user
		{
			get
			{
				return this._user;
			}
			set
			{
				if ((this._user != value))
				{
					this.OnuserChanging(value);
					this.SendPropertyChanging();
					this._user = value;
					this.SendPropertyChanged("user");
					this.OnuserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="BigInt NOT NULL")]
		public long total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pembayaran", DbType="BigInt NOT NULL")]
		public long pembayaran
		{
			get
			{
				return this._pembayaran;
			}
			set
			{
				if ((this._pembayaran != value))
				{
					this.OnpembayaranChanging(value);
					this.SendPropertyChanging();
					this._pembayaran = value;
					this.SendPropertyChanged("pembayaran");
					this.OnpembayaranChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service")]
		public long service
		{
			get
			{
				return this._service;
			}
			set
			{
				if ((this._service != value))
				{
					this.OnserviceChanging(value);
					this.SendPropertyChanging();
					this._service = value;
					this.SendPropertyChanged("service");
					this.OnserviceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ppn")]
		public long ppn
		{
			get
			{
				return this._ppn;
			}
			set
			{
				if ((this._ppn != value))
				{
					this.OnppnChanging(value);
					this.SendPropertyChanging();
					this._ppn = value;
					this.SendPropertyChanged("ppn");
					this.OnppnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pos_order_pos_order_list", Storage="_pos_order_lists", ThisKey="Id", OtherKey="order_id")]
		public EntitySet<pos_order_list> pos_order_lists
		{
			get
			{
				return this._pos_order_lists;
			}
			set
			{
				this._pos_order_lists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="master_user_pos_order", Storage="_master_user", ThisKey="user", OtherKey="Id", IsForeignKey=true)]
		public master_user master_user
		{
			get
			{
				return this._master_user.Entity;
			}
			set
			{
				master_user previousValue = this._master_user.Entity;
				if (((previousValue != value) 
							|| (this._master_user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._master_user.Entity = null;
						previousValue.pos_orders.Remove(this);
					}
					this._master_user.Entity = value;
					if ((value != null))
					{
						value.pos_orders.Add(this);
						this._user = value.Id;
					}
					else
					{
						this._user = default(int);
					}
					this.SendPropertyChanged("master_user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pos_table_pos_order", Storage="_pos_table", ThisKey="table_id", OtherKey="Id", IsForeignKey=true)]
		public pos_table pos_table
		{
			get
			{
				return this._pos_table.Entity;
			}
			set
			{
				pos_table previousValue = this._pos_table.Entity;
				if (((previousValue != value) 
							|| (this._pos_table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pos_table.Entity = null;
						previousValue.pos_orders.Remove(this);
					}
					this._pos_table.Entity = value;
					if ((value != null))
					{
						value.pos_orders.Add(this);
						this._table_id = value.Id;
					}
					else
					{
						this._table_id = default(int);
					}
					this.SendPropertyChanged("pos_table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pos_order_lists(pos_order_list entity)
		{
			this.SendPropertyChanging();
			entity.pos_order = this;
		}
		
		private void detach_pos_order_lists(pos_order_list entity)
		{
			this.SendPropertyChanging();
			entity.pos_order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pos_order_list")]
	public partial class pos_order_list : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _peroduk;
		
		private int _order_id;
		
		private System.DateTime _date;
		
		private int _quantity;
		
		private string _status;
		
		private EntityRef<pos_order> _pos_order;
		
		private EntityRef<Produk> _Produk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnperodukChanging(int value);
    partial void OnperodukChanged();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public pos_order_list()
		{
			this._pos_order = default(EntityRef<pos_order>);
			this._Produk = default(EntityRef<Produk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peroduk", DbType="Int NOT NULL")]
		public int peroduk
		{
			get
			{
				return this._peroduk;
			}
			set
			{
				if ((this._peroduk != value))
				{
					if (this._Produk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnperodukChanging(value);
					this.SendPropertyChanging();
					this._peroduk = value;
					this.SendPropertyChanged("peroduk");
					this.OnperodukChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL")]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._pos_order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pos_order_pos_order_list", Storage="_pos_order", ThisKey="order_id", OtherKey="Id", IsForeignKey=true)]
		public pos_order pos_order
		{
			get
			{
				return this._pos_order.Entity;
			}
			set
			{
				pos_order previousValue = this._pos_order.Entity;
				if (((previousValue != value) 
							|| (this._pos_order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pos_order.Entity = null;
						previousValue.pos_order_lists.Remove(this);
					}
					this._pos_order.Entity = value;
					if ((value != null))
					{
						value.pos_order_lists.Add(this);
						this._order_id = value.Id;
					}
					else
					{
						this._order_id = default(int);
					}
					this.SendPropertyChanged("pos_order");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produk_pos_order_list", Storage="_Produk", ThisKey="peroduk", OtherKey="Id", IsForeignKey=true)]
		public Produk Produk
		{
			get
			{
				return this._Produk.Entity;
			}
			set
			{
				Produk previousValue = this._Produk.Entity;
				if (((previousValue != value) 
							|| (this._Produk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produk.Entity = null;
						previousValue.pos_order_lists.Remove(this);
					}
					this._Produk.Entity = value;
					if ((value != null))
					{
						value.pos_order_lists.Add(this);
						this._peroduk = value.Id;
					}
					else
					{
						this._peroduk = default(int);
					}
					this.SendPropertyChanged("Produk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bb_log")]
	public partial class bb_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _tipe;
		
		private int _kode_stock;
		
		private long _harga_beli;
		
		private long _hpp_digunakan;
		
		private System.DateTime _date;
		
		private int _satuan;
		
		private int _add;
		
		private int _used;
		
		private EntityRef<Satuan_bb> _Satuan_bb;
		
		private EntityRef<Bahan_baku> _Bahan_baku;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OntipeChanging(int value);
    partial void OntipeChanged();
    partial void Onkode_stockChanging(int value);
    partial void Onkode_stockChanged();
    partial void Onharga_beliChanging(long value);
    partial void Onharga_beliChanged();
    partial void Onhpp_digunakanChanging(long value);
    partial void Onhpp_digunakanChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnsatuanChanging(int value);
    partial void OnsatuanChanged();
    partial void OnaddChanging(int value);
    partial void OnaddChanged();
    partial void OnusedChanging(int value);
    partial void OnusedChanged();
    #endregion
		
		public bb_log()
		{
			this._Satuan_bb = default(EntityRef<Satuan_bb>);
			this._Bahan_baku = default(EntityRef<Bahan_baku>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipe", DbType="Int NOT NULL")]
		public int tipe
		{
			get
			{
				return this._tipe;
			}
			set
			{
				if ((this._tipe != value))
				{
					if (this._Bahan_baku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntipeChanging(value);
					this.SendPropertyChanging();
					this._tipe = value;
					this.SendPropertyChanged("tipe");
					this.OntipeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kode_stock", DbType="Int NOT NULL")]
		public int kode_stock
		{
			get
			{
				return this._kode_stock;
			}
			set
			{
				if ((this._kode_stock != value))
				{
					this.Onkode_stockChanging(value);
					this.SendPropertyChanging();
					this._kode_stock = value;
					this.SendPropertyChanged("kode_stock");
					this.Onkode_stockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_harga_beli", DbType="BigInt NOT NULL")]
		public long harga_beli
		{
			get
			{
				return this._harga_beli;
			}
			set
			{
				if ((this._harga_beli != value))
				{
					this.Onharga_beliChanging(value);
					this.SendPropertyChanging();
					this._harga_beli = value;
					this.SendPropertyChanged("harga_beli");
					this.Onharga_beliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hpp_digunakan", DbType="BigInt NOT NULL")]
		public long hpp_digunakan
		{
			get
			{
				return this._hpp_digunakan;
			}
			set
			{
				if ((this._hpp_digunakan != value))
				{
					this.Onhpp_digunakanChanging(value);
					this.SendPropertyChanging();
					this._hpp_digunakan = value;
					this.SendPropertyChanged("hpp_digunakan");
					this.Onhpp_digunakanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_satuan", DbType="Int NOT NULL")]
		public int satuan
		{
			get
			{
				return this._satuan;
			}
			set
			{
				if ((this._satuan != value))
				{
					if (this._Satuan_bb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsatuanChanging(value);
					this.SendPropertyChanging();
					this._satuan = value;
					this.SendPropertyChanged("satuan");
					this.OnsatuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[add]", Storage="_add", DbType="Int NOT NULL")]
		public int add
		{
			get
			{
				return this._add;
			}
			set
			{
				if ((this._add != value))
				{
					this.OnaddChanging(value);
					this.SendPropertyChanging();
					this._add = value;
					this.SendPropertyChanged("add");
					this.OnaddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_used", DbType="Int NOT NULL")]
		public int used
		{
			get
			{
				return this._used;
			}
			set
			{
				if ((this._used != value))
				{
					this.OnusedChanging(value);
					this.SendPropertyChanging();
					this._used = value;
					this.SendPropertyChanged("used");
					this.OnusedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Satuan_bb_bb_log", Storage="_Satuan_bb", ThisKey="satuan", OtherKey="Id", IsForeignKey=true)]
		public Satuan_bb Satuan_bb
		{
			get
			{
				return this._Satuan_bb.Entity;
			}
			set
			{
				Satuan_bb previousValue = this._Satuan_bb.Entity;
				if (((previousValue != value) 
							|| (this._Satuan_bb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Satuan_bb.Entity = null;
						previousValue.bb_logs.Remove(this);
					}
					this._Satuan_bb.Entity = value;
					if ((value != null))
					{
						value.bb_logs.Add(this);
						this._satuan = value.Id;
					}
					else
					{
						this._satuan = default(int);
					}
					this.SendPropertyChanged("Satuan_bb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bahan_baku_bb_log", Storage="_Bahan_baku", ThisKey="tipe", OtherKey="Id", IsForeignKey=true)]
		public Bahan_baku Bahan_baku
		{
			get
			{
				return this._Bahan_baku.Entity;
			}
			set
			{
				Bahan_baku previousValue = this._Bahan_baku.Entity;
				if (((previousValue != value) 
							|| (this._Bahan_baku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bahan_baku.Entity = null;
						previousValue.bb_logs.Remove(this);
					}
					this._Bahan_baku.Entity = value;
					if ((value != null))
					{
						value.bb_logs.Add(this);
						this._tipe = value.Id;
					}
					else
					{
						this._tipe = default(int);
					}
					this.SendPropertyChanged("Bahan_baku");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
